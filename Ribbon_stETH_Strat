// SPDX-License-Identifier: GPL-3.0

pragma solidity ^0.8.0;

contract Ribbon_stETH_Covered_Calls {
    address TRIBE_Treasury;
    IRibbon Ribbon_IR;
  //IRibbonThetaSTETHVault Ribbon_TSV; Interfacing with the same contract is pointless
    
    constructor() {
        TRIBE_Treasury = 0x7E3Ee99EC9b2aBd42c8c8504dc8195C8dc4942D0; // currently my testnet address - Change to Tribe_DAO Address
        //I AM THE TRIBE
        Ribbon_IR = IRibbon(0x53773E034d9784153471813dacAFF53dBBB78E8c); // Ribbon 
    }

    // modifier to check if caller is the Tribe DAO or not
    modifier isTribeDAO() {
        require(msg.sender == TRIBE_Treasury, "You aren't part of the tribe...");
        _;
    }


    //Write a function...
    
}

interface IRibbon {
    //we need to interface with:
            //DepositETH
            //Call a function to find out how many shares we receive from Depositing.
            //stake - staking those shares
                   //This function is called by the user:
                   //First it calls an approval for rstETH-Theta to be transferred
                   //Then it sends the rstETH to the Ribbon address 
                   //Then the Ribbon address sends the rstETH-Theta to itself - I dont know how tf that works but Fine
                   //Finally, rstETH-Theta-Gauge is sent to the caller.
            //Need to find and interface with something to unstake
                    //Appears to be a function called Withdraw. This might be an internal ribbon thing....
                            //Withdraw is being called on rstETH-Theta-Gauge 
                                    //This function is called by the main rstETH-Theta contract to interact with the rstETH-Theta-Gauge contract
                                    //The main ribbon contract is then sent rstETH-Theta
                                    //The rstETH-Theta-Gauge is then burned to 0x000
            //CompleteWithdraw -
                   // This appears to ONLY withdraws stETH from first layer. i'm unsure if it then called the Withdraw function
}

//interface IRibbonThetaSTETHVault {
//}
